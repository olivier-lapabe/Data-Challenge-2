Structural ideas:
- Do algorithm that classifies gender to understand gender representation in test dataset. --> Guigui nouveau Runner (Gender_runner.py)
- Calculate error on gender deciles on training dataset (e.g., between 0.3 and 0.7). 
  If not similar, try to define first if a test picture is male or female. --> Olivier sur fichier EDA.ipynb
- Have error as loss function for training. --> Guillaume - nouvelle fonction de loss à définir (par ex dans utils)
- Test with less pictures in training dataset (to check if data augmentation is relevant) --> Paul
- Save images all at once on GPU at the start.

Optimization ideas:
- Train by Cross validation
- Train with different batch size
- Train with other models in torchvision (Done: mobilenetv3large, DenseNet - others to be checked...)
- Train YOLO, Mask R-CNN, RetinaNet, HRNet, Deformable CNs
- Train with other loss function
- Train with other Adam parameters (starting with learning rate)
- Train with other optimizer than Adam